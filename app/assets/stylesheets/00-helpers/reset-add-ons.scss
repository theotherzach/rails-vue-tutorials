// -----------------------------------------------------------------------------
// !-- Add Ons
//
// Other items we want to include in a reset that aren't included in the Eric
// Meyer default reset.
// -----------------------------------------------------------------------------

audio:not([controls]) {
  display: none;
}

[hidden] {
  display: none;
}

article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section {
  display: block;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: 100%;
  font-weight: normal;
}

address,
caption,
code,
dfn,
th,
var {
  font-weight: normal;
  font-style: normal;
}

a {
  font-size: 100%;
  vertical-align: baseline;
  background: transparent;

  &:hover,
  &:active {
    outline: none;
  }
}

img,
canvas,
iframe,
video,
svg,
object,
embed {
  max-width: 100%;
}

img,
object,
embed,
video {
  height: auto !important;
  border: 0;

  .lt-ie9 & {
    width: auto;
  }
}

ins {
  text-decoration: none;
  color: map-get($body, color);
}

mark {
  color: map-get($body, color);
}

del {
  text-decoration: line-through;
}

abbr {
  cursor: help;
}

// scss-lint:disable QualifyingElement
abbr[title],
dfn[title] {
  cursor: help;
  border-bottom: 1px dotted;
}
// scss-lint:enable VendorPrefixes

table {
  font-size: 100%;
  border-collapse: collapse;
}

th {
  font-weight: bold;
  border-spacing: 0;
  border-collapse: collapse;
  vertical-align: bottom;
}

td,
td img {
  border-collapse: collapse;
  vertical-align: top;
}

hr {
  display: block;
  height: 1px;
  margin: 1em 0;
  padding: 0;
  border: 0;
  border-top: map-get($borderWidth, thin) solid map-get($body, color);
}

input,
select {
  vertical-align: middle;
}

em,
i {
  font-style: italic;
}

strong,
b {
  font-weight: bold;
}

em > strong,
strong > em {
  font-weight: bold;
  font-style: italic;
}

small {
  font-size: .85em;
}

sub,
sup {
  font-size: .75em;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -.5em;
}

sub {
  bottom: -.25em;
}

pre {
  white-space: pre;
}

pre,
code,
kbd,
samp {
  font-size: 1em;
}

textarea {
  overflow: auto;
}

.clickable,
label,
[type='button'],
[type='submit'],
button,
a {
  cursor: pointer;
}

[type="radio"] {
  vertical-align: text-bottom;
}

[type="checkbox"] {
  vertical-align: bottom;
}

button {
  overflow: visible;
  width: auto;
}

button,
input,
select,
textarea {
  margin: 0;
}

// scss-lint:disable VendorPrefixes PropertySortOrder
html {
  font-size: 100%;
  overflow-y: scroll;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
}
// scss-lint:enable VendorPrefixes PropertySortOrder

:focus {
  outline: none;
}

*,
*:after,
*:before {
  box-sizing: inherit;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-smoothing: antialiased;
  text-rendering: optimizeLegibility;
  font-variant-ligatures: common-ligatures;
  font-feature-settings: "kern";
  font-kerning: normal;
}

svg {
  fill: currentColor;

  &:not(:root) {
    overflow: hidden;
  }
}
